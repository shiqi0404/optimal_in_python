# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Project Name:   gurobi 
File Name：     demo2_10
Description :   Numpy 的随机数
Author :        Steven.zou
E-mail:         zoushiqi0404@gmail.com
Date：          2020-11-26 18:19
Software:       PyCharm
-------------------------------------------------
 Change Activity:
                   2020-11-26:
-------------------------------------------------
"""
# Numpy 随机数
from numpy import random

# 设定随机数种子
random.seed(1234)

# 产生均匀分布的随机数，其维度为 3*2
a1 = random.rand(3, 2)
print('均匀分布: \n', a1)
# [[0.19151945 0.62210877]
#  [0.43772774 0.78535858]
#  [0.77997581 0.27259261]]

# 产生标准正态分布随机数，其维度为 3*2
a2 = random.randn(3, 2)
print('标准正态分布: \n', a2)
# [[ 0.85958841 -0.6365235 ]
#  [ 0.01569637 -2.24268495]
#  [ 1.15003572  0.99194602]]

# 在[0,1)内产生随机数，其维度是 3*2
a3 = random.random((3, 2))
print('[0,1)内随机数: \n', a3)
# [[0.37025075 0.56119619]
# [0.50308317 0.01376845]
# [0.77282662 0.88264119]]

# 指定区间内的随机整数，其维度是 3*2
a4 = random.randint(low=2, high=10, size=(3, 2))
print('在[2,10)区间的随机整数: \n', a4)
# [[9 5]
#  [2 3]
#  [5 2]]

# 正态分布，loc表示均值，scale表示方差
a5 = random.normal(loc=0, scale=1, size=(3, 2))
print('以均值为0，方差为1的正态分布的随机数; \n', a5)
# [[0.60430874 - 0.18301422]
#  [-1.12650247  1.65887284]
#  [-0.66044141   1.04108597]]

# 泊松分布
a6 = random.poisson(lam=100, size=(3, 2))
print('泊松分布产生的随机数: \n', a6)
# [[102  98]
#  [88 106]
#  [118 116]]

# 均匀分布
a7 = random.uniform(low=3, high=10, size=(3, 2))
print('均匀分布产生的随机数: \n', a7)
# [[4.29000959 3.33148695]
#  [7.72416661 7.16237346]
#  [6.73317114 3.30326844]]

# 产生beta分布
a8 = random.beta(a=3, b=5, size=(3, 2))
print('beta分布产生的随机数: \n', a8)
# [[0.08875468 0.33306552]
#  [0.1981133  0.44075403]
#  [0.47865932 0.36719651]]

# 二项分布(伯努利分布)
a9 = random.binomial(n=4, p=0.8, size=(3, 2))
print('二项分布(伯努利分布)产生的随机数: \n', a9)
# [[3 4]
#  [4 3]
#  [3 2]]

# 指数分布
a10 = random.exponential(scale=3, size=(3, 2))
print('指数分布产生的随机数: \n', a10)
# [[2.94838691 3.67250169]
#  [0.48696996 4.11201206]
#  [5.33369382 3.01311888]]

# F分布
a11 = random.f(dfnum=100, dfden=5, size=(3, 2))
print('F分布产生的随机数: \n', a11)
# [[1.11668581 0.76258275]
#  [0.85076165 1.17896687]
#  [0.86142475 3.4106539]]

# 有放回随机采样
samples = [1, 2, 3, 4, 5, 6, 7, 8, 9]
a12 = random.choice(samples, size=5, replace=True)
print('有放回随机采样产生的随机数: \n', a12)
# [2 2 7 3 9]

# 无放回随机采样
a13 = random.choice(samples, size=5, replace=False)
print('无放回随机采样产生的随机数: \n', a13)
# [4 3 2 6 9]

# 打乱样本顺序，以产生随机数的效果
random.shuffle(samples)
print('打乱样本顺序产生的随机数: \n', samples)
# [3, 5, 1, 8, 2, 4, 9, 7, 6]
