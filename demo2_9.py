# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Project Name:   gurobi 
File Name：     demo2_9
Description :   Numpy 基础
                1.Numpy 的基础数据结构是指数组(array)， 包括一维数组、二维数组、三维数组、高维数组等。
                  一维数组 表示 向量；
                  二维数组 表示 矩阵 或 列向量；
                  三维数组 表示 在时间轴上的二维数组。
                2.数组的重塑
                  重塑数组形状 reshape
                3.数组的合并与切片
                  合并： 将两个及两个以上的数组合并成一个大的数组；
                  切片：截取子数组。
Author :        Steven.zou
E-mail:         zoushiqi0404@gmail.com
Date：          2020-11-26 17:56
Software:       PyCharm
-------------------------------------------------
 Change Activity:
                   2020-11-26:
-------------------------------------------------
"""
# Numpy 数组
import numpy as np

# 创建一个二维数组
a = np.array([[1, 2, 3],
             [4, 5, 6]])

print('数组的维度是: ', a.shape)  # 输出：(2,3)

# 创建全是0或1的二维数组
a_one = np.ones((2, 3))
print('全是1的数组:\n', a_one)   # \n 表示换行显示
# 创建全是1的数组：
# [ [1. 1. 1.]
# [1. 1. 1.]]

a_zero = np.zeros((2, 3))
print('全是0的数组:\n', a_zero)
# 创建全是0的数组：
# [ [0. 0. 0.]
# [0. 0. 0.]]

# 重塑数组形状 reshape
# 维度中的 -1 表示自动推断的意思

print('将二维数组转成一维数组', a.ravel())     # 输出 [1 2 3 4 5 6]

print('改变二维数组形状: 2*3 -> 3*2 \n', a.reshape((3, 2)))
# 输出
# [[1 2]
# [3 4]
# [5 6]]

print('将二维数组转成列向量: \n', a.reshape((-1, 1)))
# -1 表示自动推断维度，这里 a.reshape((-1, 1)) 表示将数组重塑成 n 行 1 列的新数组，这里的 n 会被自动推断出来

# 输出
# [[1]
# [2]
# [3]
# [4]
# [5]
# [6]]

# 数组的合并与切片。
# 合并： 将两个及两个以上的数组合并成一个大的数组；
# 切片：截取子数组。

# 两个数组的合并
b = np.array([[7, 8, 9],
              [10, 11, 12]])

print('纵向拼接: \n', np.vstack([a, b]))
# 输出
# 纵向拼接:
#  [[ 1  2  3]
#  [ 4  5  6]
#  [ 7  8  9]
#  [10 11 12]]

print('横向拼接: \n', np.hstack([a, b]))
# 输出
# 横向拼接:
#  [[ 1  2  3  7  8  9]
#  [ 4  5  6 10 11 12]]

# 切片： 截取子数组
c = np.array([[1, 2, 3, 4, 5, 6],
              [4, 5, 6, 7, 8, 9],
              [7, 8, 9, 10, 11, 12],
              [10, 11, 12, 13, 14, 15]])

print('截取第1-3行，2-4列的子数组: \n', c[0:3, 1:4])
# 输出
# 截取第1-3行，2-4列的子数组:
#  [[ 2  3  4]
#  [ 5  6  7]
#  [ 8  9 10]]

print('截取前3行，后4列的子数组: \n', c[:3, -4:])
# 这里也用到了 自动推断。 [:3] 等价于 [0:3]，[-4:]表示从倒数第4个开始到最后一个的意思。
# 输出
# 截取前3行，后4列的子数组:
#  [[ 3  4  5  6]
#  [ 6  7  8  9]
#  [ 9 10 11 12]]
